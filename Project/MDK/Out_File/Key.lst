C251 COMPILER V5.60.0,  Key                                                                15/03/24  17:31:16  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Key
OBJECT MODULE PLACED IN .\Out_File\Key.obj
COMPILER INVOKED BY: D:\Keil5\C251\BIN\C251.EXE Key.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE INCDIR(..\..
                    -\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\
                    -src;..\..\Libraries\seekfree_components) DEBUG PRINT(.\Out_File\Key.lst) OBJECT(.\Out_File\Key.obj) 

stmt  level    source

    1          #include "Key.h"
    2          uint32 KEYS1_Flag = 0;
    3          uint32 KEYS2_Flag = 0;
    4          uint32 KEYLeft_Flag = 0;
    5          uint32 KEYRight_Flag = 0;
    6          uint32 KEYUp_Flag = 0;
    7          uint32 KEYDown_Flag = 0;
    8          uint32 KEYCENTER_Flag = 0;
    9          uint32 Screen_Page = 0;        //屏幕页数
   10          uint32 Pid_Choose=0;           //pid选择变量 1为p 2为i 3为d                 M
   11          //===================================按键初始化===========================  V
   12          void Key_init(void)
   13          {
   14   1              gpio_mode(KeyS1,2);
   15   1              gpio_pull_set(KeyS1,PULLUP);//KEYS1初始化
   16   1              gpio_mode(KeyS2,2);
   17   1              gpio_pull_set(KeyS2,PULLUP);//KEYS2初始化
   18   1              gpio_mode(KeyLeft,2);
   19   1              gpio_pull_set(KeyLeft,PULLUP);//KEYA初始化
   20   1              gpio_mode(KeyRight,2);
   21   1              gpio_pull_set(KeyRight,PULLUP);//KEYB初始化
   22   1              gpio_mode(KeyUp,2);
   23   1              gpio_pull_set(KeyUp,PULLUP);//KEYC初始化
   24   1              gpio_mode(KeyDown,2);
   25   1              gpio_pull_set(KeyDown,PULLUP);//KEYD初始化
   26   1              gpio_mode(KeyCenter,2);
   27   1              gpio_pull_set(KeyCenter,PULLUP);//KEYCENTER初始化
   28   1      }
   29          //================================按键扫描========================================
   30          void Key_Scan(void)
   31          {
   32   1              if(KEYS1 == 0)         //扫描按键KEYS1  下侧右边的按键
   33   1              {
   34   2                      delay_ms(10);
   35   2                      if(KEYS1 == 0)
   36   2                      {
   37   3                              KEYS1_Flag = 1;
   38   3                      }
   39   2                      while(KEYS1 == 0);
   40   2              }
   41   1              
   42   1              if(KEYS2 == 0)                  //扫描按键KEYS2  下侧左边的按键
   43   1              {
   44   2                      delay_ms(10);
   45   2                      if(KEYS2 == 0)
   46   2                      {
   47   3                              KEYS2_Flag = 1;
   48   3                      }
   49   2                      while(KEYS2 == 0);
   50   2              }
   51   1              
   52   1              if(KEYRight == 0)                       //扫描按键KEYRight
   53   1              {
   54   2                      delay_ms(10);
   55   2                      if(KEYRight == 0)
   56   2                      {
   57   3                              KEYRight_Flag = 1;
C251 COMPILER V5.60.0,  Key                                                                15/03/24  17:31:16  PAGE 2   

   58   3                      }
   59   2                      while(KEYRight == 0);
   60   2              }
   61   1              
   62   1              if(KEYLeft == 0)                        //扫描按键KEYLeft
   63   1              {
   64   2                      delay_ms(10);
   65   2                      if(KEYLeft == 0)
   66   2                      {
   67   3                              KEYLeft_Flag = 1;
   68   3                      }
   69   2                      while(KEYLeft == 0);
   70   2              }
   71   1              
   72   1              if(KEYUp == 0)                  //扫描按键KEYUp
   73   1              {
   74   2                      delay_ms(10);
   75   2                      if(KEYUp == 0)
   76   2                      {
   77   3                              KEYUp_Flag = 1;
   78   3                      }
   79   2                      while(KEYUp == 0);
   80   2              }
   81   1              
   82   1              if(KEYDown == 0)                        //扫描按键KEYDown
   83   1              {
   84   2                      delay_ms(10);
   85   2                      if(KEYDown == 0)
   86   2                      {
   87   3                              KEYDown_Flag = 1;
   88   3                      }
   89   2                      while(KEYDown == 0);
   90   2              }
   91   1              
   92   1              if(KEYCENTER == 0)              //扫描按键KEYCENTER
   93   1              {
   94   2                      delay_ms(10);
   95   2                      if(KEYCENTER == 0)
   96   2                      {
   97   3                              KEYCENTER_Flag = 1;
   98   3                      }
   99   2                      while(KEYCENTER == 0);
  100   2              }
  101   1      }
  102          //=============================================================
  103          //人机交互调参================================
  104          void Key_Screen(void)
  105          {
  106   1              if(KEYS1_Flag == 1)
  107   1              {
  108   2                      if(Screen_Page < 2) 
  109   2                              Screen_Page++;
  110   2                      else                            
  111   2                              Screen_Page = 1;
  112   2                      Screen_Choose_Page();
  113   2                      KEYS1_Flag = 0;
  114   2              }
  115   1              if(Screen_Page==1||Screen_Page==2)
  116   1              {
  117   2                      if(KEYCENTER_Flag == 1)
  118   2                      {
  119   3                              if(Pid_Choose < 3)
  120   3                                      Pid_Choose++;
  121   3                              else Pid_Choose = 1;
  122   3                              Screen_Choose_Pid();
  123   3                              KEYCENTER_Flag = 0;
C251 COMPILER V5.60.0,  Key                                                                15/03/24  17:31:16  PAGE 3   

  124   3                      }
  125   2              }
  126   1              if(KEYUp_Flag == 1)
  127   1              {
  128   2                      Screen_Pid_MAXIncrease();
  129   2                      KEYUp_Flag = 0;
  130   2              }
  131   1              if(KEYDown_Flag == 1)
  132   1              {
  133   2                      Screen_Pid_MAXDecrease();
  134   2                      KEYDown_Flag = 0;
  135   2              }
  136   1              if(KEYLeft_Flag == 1)
  137   1              {
  138   2                      Screen_Pid_MINDecrease();
  139   2                      KEYLeft_Flag = 0;
  140   2              }
  141   1              if(KEYRight_Flag == 1)
  142   1              {
  143   2                      Screen_Pid_MINIncrease();
  144   2                      KEYRight_Flag = 0;
  145   2              }
  146   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       653     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        36     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        72     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
